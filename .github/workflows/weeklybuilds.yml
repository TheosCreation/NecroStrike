name: Weekly build (manual or scheduled)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: Branch or SHA to build
        required: true
        default: main
  schedule:
    # Monday 06:00 Pacific/Auckland (NZST/NZDT handled by two crons)
    - cron: '0 18 * 4-9 0'   # Apr–Sep -> Mon 06:00 NZST
    - cron: '0 17 * 10-12 0' # Oct–Dec -> Mon 06:00 NZDT
    - cron: '0 17 * 1-3 0'   # Jan–Mar -> Mon 06:00 NZDT

permissions:
  contents: write

jobs:
  tag_and_build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: [StandaloneWindows64]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          ref: ${{ github.event.inputs.ref || 'main' }}

      - name: Compute next weekly tag (vN.0.0)
        id: compute
        shell: bash
        run: |
          set -euo pipefail
          git fetch --tags --force
          latest=$(git tag -l 'v[0-9]*.0.0' --sort=-v:refname | head -n1)
          if [[ -z "$latest" ]]; then
            tag="v0.0.0"
          else
            maj=${latest#v}; maj=${maj%%.*}
            tag="v$((maj+1)).0.0"
          fi
          echo "version=$tag" >> "$GITHUB_OUTPUT"

      - name: Create and push tag
        env:
          VERSION: ${{ steps.compute.outputs.version }}
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag -a "$VERSION" -m "Weekly build"
          git push origin "$VERSION"

      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: Zip build
        env:
          VERSION: ${{ steps.compute.outputs.version }}
        run: |
          cd build/${{ matrix.targetPlatform }}
          zip -r "${{ github.workspace }}/NecroStrike-${VERSION}-${{ matrix.targetPlatform }}.zip" .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.compute.outputs.version }}
          name: NecroStrike-${{ steps.compute.outputs.version }}
          files: ${{ github.workspace }}/NecroStrike-${{ steps.compute.outputs.version }}-${{ matrix.targetPlatform }}.zip
          fail_if_no_files: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload to itch.io
        env:
          VERSION: ${{ steps.compute.outputs.version }}
          BUTLER_API_KEY: ${{ secrets.BUTLER_API_KEY }}
        uses: manleydev/butler-publish-itchio-action@master
        with:
          entryPoint: butler
          args: >
            push "${{ github.workspace }}/NecroStrike-${VERSION}-${{ matrix.targetPlatform }}.zip"
            theoscreation/zombie-game:windows
            --userversion "NecroStrike-${VERSION}"
